import streamlit as st
import pandas as pd
import joblib
import matplotlib.pyplot as plt
import seaborn as sns

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• AI
model = joblib.load("model.pkl")  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏´‡∏•‡∏±‡∏á Train ‡∏î‡πâ‡∏ß‡∏¢ joblib

# ‡πÇ‡∏´‡∏•‡∏î LabelEncoder
try:
    label_encoder = joblib.load("label_encoder.pkl")  # ‡πÇ‡∏´‡∏•‡∏î LabelEncoder ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô Train
except FileNotFoundError:
    st.error(" ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå 'label_encoder.pkl' ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å LabelEncoder ‡πÅ‡∏•‡∏∞‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏ï‡∏∞
try:
    df = pd.read_csv("EPL_20_21.csv")  # ‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
except FileNotFoundError:
    st.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå 'EPL_20_21.csv' ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î")
    df = pd.DataFrame()  # ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå ‡πÉ‡∏´‡πâ df ‡πÄ‡∏õ‡πá‡∏ô DataFrame ‡∏ß‡πà‡∏≤‡∏á

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤ UI
st.set_page_config(page_title="Football AI Prediction", layout="wide")

# Header
st.title("‚öΩAI Player Performance Prediction")
st.markdown("## ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏ï‡∏∞ ‡∏î‡πâ‡∏ß‡∏¢ Machine Learning")

# ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
st.sidebar.header("üìä ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏ï‡∏∞")
age = st.sidebar.slider("Age", 18, 40, 25)
matches = st.sidebar.number_input("Matches", min_value=0, max_value=50, value=10)
starts = st.sidebar.number_input("Starts", min_value=0, max_value=50, value=5)
mins = st.sidebar.number_input("Minutes", min_value=0, max_value=4500, value=900)  # ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô
goals = st.sidebar.number_input("Goals", min_value=0, max_value=50, value=5)
assists = st.sidebar.number_input("Assists", min_value=0, max_value=50, value=3)

#  ‡∏ó‡∏≥ Prediction
if st.sidebar.button("Predict Performance"):
    if 'label_encoder' in locals():  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ label_encoder ‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á input_data ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ 6 features
        input_data = pd.DataFrame({
            'Age': [age],
            'Matches': [matches],
            'Starts': [starts],
            'Mins': [mins],
            'Goals': [goals],
            'Assists': [assists]
        })
        
        # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•
        prediction = model.predict(input_data)
        
        # ‡πÅ‡∏õ‡∏•‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™ (Good, Average, Poor)
        predicted_class = label_encoder.inverse_transform(prediction)[0]
        
        st.sidebar.success(f"üîÆ Predicted Performance: {predicted_class}")
    else:
        st.sidebar.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å LabelEncoder ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î")

# üìä ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏ï‡∏∞
if not df.empty:
    st.subheader("üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ô‡∏±‡∏Å‡πÄ‡∏ï‡∏∞‡πÉ‡∏ô‡∏•‡∏µ‡∏Å")

    # 1Ô∏è‚É£ ‡∏Å‡∏£‡∏≤‡∏ü Goals vs Assists
    fig1, ax1 = plt.subplots()
    sns.scatterplot(x=df["Goals"], y=df["Assists"], hue=df["Position"], palette="coolwarm", ax=ax1)
    ax1.set_xlabel("Goals")
    ax1.set_ylabel("Assists")
    ax1.set_title("Goals vs Assists")
    st.pyplot(fig1)

    # 2Ô∏è‚É£ ‡∏Å‡∏£‡∏≤‡∏ü Age Distribution
    fig2, ax2 = plt.subplots()
    sns.histplot(df["Age"], bins=15, kde=True, color="blue", ax=ax2)
    ax2.set_xlabel("Age")
    ax2.set_ylabel("Count")
    ax2.set_title("Age Distribution of Players")
    st.pyplot(fig2)

#  Footer
st.markdown("---")
st.markdown("üìå **Developed by Panuthep & Tosapat | Football AI Project**")
